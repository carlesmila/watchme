% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interraterReliability.R
\name{iraWatchme}
\alias{iraWatchme}
\title{Calculates interrater agreement using the irr package. A unit of comparison is one picture.}
\usage{
iraWatchme(wearableCamImagesList, namesList = NULL, oneToOne = FALSE,
  byGroup = FALSE, byCode = FALSE)
}
\arguments{
\item{wearableCamImagesList}{a list of \code{wearableCamImages} objects.}

\item{namesList}{(optional) a vector of names for the coders. It must be the same length as wearableCamImagesList
and contains different names.}

\item{oneToOne}{a boolean indicating whether Cohen's kappa should be calculated for each possible
pair of coders in case of more than 2 coders,
instead of Fleiss's Kappa for all coders at the same time.}

\item{byGroup}{boolean indicating whether the IRR should be calculated for each group of codes separately. The meaning is, agreement = giving a code of the same group.}

\item{byCode}{boolean indicating whether the IRR should be calculated for each code separately. If both
byGroup and byCode are FALSE annotations are compared as they are.}
}
\value{
A \code{tbl_df} presenting the results of a call to the \code{irr} function.
If there are only two raters the called function is \code{kappa2}, unweighted.
 If there are more than two raters and \code{oneToOne} is \code{FALSE}, the called function is \code{kappam.fleiss}.
}
\description{
Calculates interrater agreement using the irr package. A unit of comparison is one picture.
}
\examples{
data('IO1')
data('IO2')
listWC <- list(IO1, IO2)
namesList <- c('Cain', 'Abel')
iraWatchme(listWC, namesList=namesList)
listWC2 <- list(IO1, IO1, IO2)
namesList <- c('Riri', 'Fifi', 'Loulou')
iraWatchme(listWC2, namesList=namesList)
iraWatchme(listWC2, namesList=namesList, oneToOne=TRUE)
iraWatchme(listWC, namesList=c('Cain', 'Abel'), oneToOne=TRUE, byCode=TRUE)
iraWatchme(listWC, namesList=c('Cain', 'Abel'), oneToOne=TRUE, byGroup=TRUE)
}

